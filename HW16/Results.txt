ResultsMy robot worked surprisingly well.  I used only one slider in the app that was used to vary the threshold, similar to how it was done in the HW14 wiki page.  I also used two centers of mass 150 rows apart from one another.  I then calculated the difference between them, as well as the average of them.  Weighting the difference and the deviation of the calculated average from the center of the picture and adding those two variables to 1000 resulted in a usable proportion.  Admittedly, the reason I chose to default to 1000 was because I did not want to mess with floats and typecasting, etc.   The calculated Proportion variable was the only thing sent to the PIC.  The PIC used this information to decide if a right turn was necessary (Proportion > 1000) or a left turn was necessary (Proportion < 1000).  The outside wheel of the turn was set to max speed, while the inside wheel was linearly decreased by the absolute value of the difference between Proportion and 1000.  This allowed for a continuously updating turning procedure that allowed for very accurate tracking.My actual time trial had one small error in that the robot lost the track at one turn.  It handled all the other turns flawlessly, but lost one due to incorrect thresholding.  Once the robot was corrected, it went on to finish with a time of about 48 seconds.Joe Harris